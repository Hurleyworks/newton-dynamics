/* Copyright (c) <2003-2022> <Newton Game Dynamics>
* 
* This software is provided 'as-is', without any express or implied
* warranty. In no event will the authors be held liable for any damages
* arising from the use of this software.
* 
* Permission is granted to anyone to use this software for any purpose,
* including commercial applications, and to alter it and redistribute it
* freely
*/
#version 450

#define WORKGROUP_SIZE 256
layout (local_size_x = WORKGROUP_SIZE, local_size_y = 1, local_size_z = 1 ) in;

// use std140 for uniform buffers, data is 16 byte aligned
layout(std140, binding = 0) uniform UniformBufferObject 
{
    int m_inputSize;
    float m_scaleParam;
};

// use std430 buffer semantic, data is word aligned 
layout(std430, binding = 1) readonly buffer inputBuffer
{
   float m_input[];
};

layout(std430, binding = 2) buffer outputBuffer
{
   float m_output[];
};

void main() 
{
  uint index = gl_GlobalInvocationID.x;
  if(index >= m_inputSize)
    return;

  m_output[index] = m_scaleParam * m_input[index];
}