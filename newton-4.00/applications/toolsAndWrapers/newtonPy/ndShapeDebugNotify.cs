//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ndShapeDebugNotify : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ndShapeDebugNotify(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ndShapeDebugNotify obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ndShapeDebugNotify() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          newtonPINVOKE.delete_ndShapeDebugNotify(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public virtual void DrawPolygon(SWIGTYPE_p_ndInt32 vertexCount, ndVector faceArray, SWIGTYPE_p_ndShapeDebugNotify__ndEdgeType edgeType) {
    newtonPINVOKE.ndShapeDebugNotify_DrawPolygon(swigCPtr, SWIGTYPE_p_ndInt32.getCPtr(vertexCount), ndVector.getCPtr(faceArray), SWIGTYPE_p_ndShapeDebugNotify__ndEdgeType.getCPtr(edgeType));
    if (newtonPINVOKE.SWIGPendingException.Pending) throw newtonPINVOKE.SWIGPendingException.Retrieve();
  }

  public ndShapeInstance m_instance {
    set {
      newtonPINVOKE.ndShapeDebugNotify_m_instance_set(swigCPtr, ndShapeInstance.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = newtonPINVOKE.ndShapeDebugNotify_m_instance_get(swigCPtr);
      ndShapeInstance ret = (cPtr == global::System.IntPtr.Zero) ? null : new ndShapeInstance(cPtr, false);
      return ret;
    } 
  }

  public enum ndEdgeType {
    m_shared,
    m_open
  }

}
