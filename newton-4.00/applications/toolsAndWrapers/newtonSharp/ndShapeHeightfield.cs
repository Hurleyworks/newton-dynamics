//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ndShapeHeightfield : ndShapeStaticMesh {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal ndShapeHeightfield(global::System.IntPtr cPtr, bool cMemoryOwn) : base(newtonPINVOKE.ndShapeHeightfield_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ndShapeHeightfield obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          newtonPINVOKE.delete_ndShapeHeightfield(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public ndShapeHeightfield(SWIGTYPE_p_ndInt32 width, SWIGTYPE_p_ndInt32 height, ndShapeHeightfield.ndGridConstruction contructionMode, SWIGTYPE_p_ndFloat32 horizontalScale_x, SWIGTYPE_p_ndFloat32 horizontalScale_z) : this(newtonPINVOKE.new_ndShapeHeightfield__SWIG_0(SWIGTYPE_p_ndInt32.getCPtr(width), SWIGTYPE_p_ndInt32.getCPtr(height), (int)contructionMode, SWIGTYPE_p_ndFloat32.getCPtr(horizontalScale_x), SWIGTYPE_p_ndFloat32.getCPtr(horizontalScale_z)), true) {
    if (newtonPINVOKE.SWIGPendingException.Pending) throw newtonPINVOKE.SWIGPendingException.Retrieve();
  }

  public ndShapeHeightfield(SWIGTYPE_p_ndLoadSaveBase__ndLoadDescriptor desc) : this(newtonPINVOKE.new_ndShapeHeightfield__SWIG_1(SWIGTYPE_p_ndLoadSaveBase__ndLoadDescriptor.getCPtr(desc)), true) {
    if (newtonPINVOKE.SWIGPendingException.Pending) throw newtonPINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_ndArrayT_ndReal_t GetElevationMap() {
    SWIGTYPE_p_ndArrayT_ndReal_t ret = new SWIGTYPE_p_ndArrayT_ndReal_t(newtonPINVOKE.ndShapeHeightfield_GetElevationMap__SWIG_0(swigCPtr), false);
    return ret;
  }

  public void UpdateElevationMapAabb() {
    newtonPINVOKE.ndShapeHeightfield_UpdateElevationMapAabb(swigCPtr);
  }

  public void GetLocalAabb(ndVector p0, ndVector p1, ndVector boxP0, ndVector boxP1) {
    newtonPINVOKE.ndShapeHeightfield_GetLocalAabb(swigCPtr, ndVector.getCPtr(p0), ndVector.getCPtr(p1), ndVector.getCPtr(boxP0), ndVector.getCPtr(boxP1));
    if (newtonPINVOKE.SWIGPendingException.Pending) throw newtonPINVOKE.SWIGPendingException.Retrieve();
  }

  public enum ndGridConstruction {
    m_normalDiagonals = 0,
    m_invertedDiagonals
  }

}
