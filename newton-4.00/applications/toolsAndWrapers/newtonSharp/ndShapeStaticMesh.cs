//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ndShapeStaticMesh : ndShape {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal ndShapeStaticMesh(global::System.IntPtr cPtr, bool cMemoryOwn) : base(newtonPINVOKE.ndShapeStaticMesh_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ndShapeStaticMesh obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          newtonPINVOKE.delete_ndShapeStaticMesh(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public ndShapeStaticMesh(ndShapeID id) : this(newtonPINVOKE.new_ndShapeStaticMesh__SWIG_0((int)id), true) {
  }

  public ndShapeStaticMesh(SWIGTYPE_p_ndLoadSaveBase__ndLoadDescriptor desc) : this(newtonPINVOKE.new_ndShapeStaticMesh__SWIG_1(SWIGTYPE_p_ndLoadSaveBase__ndLoadDescriptor.getCPtr(desc)), true) {
    if (newtonPINVOKE.SWIGPendingException.Pending) throw newtonPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void DebugShape(ndMatrix matrix, ndShapeDebugNotify debugCallback) {
    newtonPINVOKE.ndShapeStaticMesh_DebugShape(swigCPtr, ndMatrix.getCPtr(matrix), ndShapeDebugNotify.getCPtr(debugCallback));
    if (newtonPINVOKE.SWIGPendingException.Pending) throw newtonPINVOKE.SWIGPendingException.Retrieve();
  }

  public override SWIGTYPE_p_ndFloat32 RayCast(ndRayCastNotify callback, ndVector localP0, ndVector localP1, SWIGTYPE_p_ndFloat32 maxT, ndBody body, SWIGTYPE_p_ndContactPoint contactOut) {
    SWIGTYPE_p_ndFloat32 ret = new SWIGTYPE_p_ndFloat32(newtonPINVOKE.ndShapeStaticMesh_RayCast(swigCPtr, ndRayCastNotify.getCPtr(callback), ndVector.getCPtr(localP0), ndVector.getCPtr(localP1), SWIGTYPE_p_ndFloat32.getCPtr(maxT), ndBody.getCPtr(body), SWIGTYPE_p_ndContactPoint.getCPtr(contactOut)), true);
    if (newtonPINVOKE.SWIGPendingException.Pending) throw newtonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual void GetCollidingFaces(ndPolygonMeshDesc data) {
    newtonPINVOKE.ndShapeStaticMesh_GetCollidingFaces(swigCPtr, ndPolygonMeshDesc.getCPtr(data));
  }

  public override void Save(SWIGTYPE_p_ndLoadSaveBase__ndSaveDescriptor desc) {
    newtonPINVOKE.ndShapeStaticMesh_Save(swigCPtr, SWIGTYPE_p_ndLoadSaveBase__ndSaveDescriptor.getCPtr(desc));
    if (newtonPINVOKE.SWIGPendingException.Pending) throw newtonPINVOKE.SWIGPendingException.Retrieve();
  }

}
