//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ndBodyNotify : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ndBodyNotify(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ndBodyNotify obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ndBodyNotify() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          newtonPINVOKE.delete_ndBodyNotify(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public ndBodyNotify(ndVector defualtGravity) : this(newtonPINVOKE.new_ndBodyNotify__SWIG_0(ndVector.getCPtr(defualtGravity)), true) {
    if (newtonPINVOKE.SWIGPendingException.Pending) throw newtonPINVOKE.SWIGPendingException.Retrieve();
  }

  public ndBodyNotify(SWIGTYPE_p_ndLoadSaveBase__ndLoadDescriptor desc) : this(newtonPINVOKE.new_ndBodyNotify__SWIG_1(SWIGTYPE_p_ndLoadSaveBase__ndLoadDescriptor.getCPtr(desc)), true) {
    if (newtonPINVOKE.SWIGPendingException.Pending) throw newtonPINVOKE.SWIGPendingException.Retrieve();
  }

  public ndBody GetBody() {
    global::System.IntPtr cPtr = newtonPINVOKE.ndBodyNotify_GetBody__SWIG_0(swigCPtr);
    ndBody ret = (cPtr == global::System.IntPtr.Zero) ? null : new ndBody(cPtr, false);
    return ret;
  }

  public virtual SWIGTYPE_p_void GetUserData() {
    global::System.IntPtr cPtr = newtonPINVOKE.ndBodyNotify_GetUserData(swigCPtr);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public ndVector GetGravity() {
    ndVector ret = new ndVector(newtonPINVOKE.ndBodyNotify_GetGravity(swigCPtr), true);
    return ret;
  }

  public void SetGravity(ndVector defualtGravity) {
    newtonPINVOKE.ndBodyNotify_SetGravity(swigCPtr, ndVector.getCPtr(defualtGravity));
    if (newtonPINVOKE.SWIGPendingException.Pending) throw newtonPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void OnTransform(SWIGTYPE_p_ndInt32 threadIndex, ndMatrix matrix) {
    newtonPINVOKE.ndBodyNotify_OnTransform(swigCPtr, SWIGTYPE_p_ndInt32.getCPtr(threadIndex), ndMatrix.getCPtr(matrix));
    if (newtonPINVOKE.SWIGPendingException.Pending) throw newtonPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void Save(SWIGTYPE_p_ndLoadSaveBase__ndSaveDescriptor desc) {
    newtonPINVOKE.ndBodyNotify_Save(swigCPtr, SWIGTYPE_p_ndLoadSaveBase__ndSaveDescriptor.getCPtr(desc));
    if (newtonPINVOKE.SWIGPendingException.Pending) throw newtonPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void OnApplyExternalForce(SWIGTYPE_p_ndInt32 threadIndex, SWIGTYPE_p_ndFloat32 timestep) {
    newtonPINVOKE.ndBodyNotify_OnApplyExternalForce(swigCPtr, SWIGTYPE_p_ndInt32.getCPtr(threadIndex), SWIGTYPE_p_ndFloat32.getCPtr(timestep));
    if (newtonPINVOKE.SWIGPendingException.Pending) throw newtonPINVOKE.SWIGPendingException.Retrieve();
  }

}
